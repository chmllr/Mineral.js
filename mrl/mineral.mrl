; this file contains all core function of Mineral

; MACROS

(def defmacro
	(macro 
		(name args body)
		`(def ~name
			(macro ~args ~body))))

(def defn
	(macro 
		(name args body)
		`(def ~name
			(lambda ~args ~body))))

(defn empty?
	(list)
	(eq list ()))

(defn
	reduce (f memo list)
	(if (empty? list)
		memo
		(reduce f
				(f memo (head list))
				(tail list))))

(defn
	reduce-right (f memo list)
	(if (empty? list)
		memo
		(f (head list) (reduce-right f memo (tail list)))))

(defn
	map (f list)
	(if (empty? list) 
		()
		(cons
			(f (head list))
			(map f (tail list)))))

(defn
	str (& strings)
	(reduce-right (% string memo . (cons string memo))
			()
			strings))

(defn
	console-log (string)
	(.log console string))

(defn
	console-error (string)
	(.error console string))